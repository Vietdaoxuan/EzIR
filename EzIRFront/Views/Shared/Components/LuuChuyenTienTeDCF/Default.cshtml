@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Mvc.Localization;
@inject IHtmlLocalizer<SharedResource> Localizer;
@using Microsoft.AspNetCore.Localization;
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
}
<link href="~/css/taichinh.css" rel="stylesheet" />
<link href="~/css/dropdownTaichinh.css" rel="stylesheet" />
<style>
    /* Css text level1*/
    .text-level1 {
        font-weight: bold;
        color: #1184ba;
    }
    /* Css text level2*/
    .text-level2 {
        font-weight: bold;
    }
  


  
   
    

    .hide {
        display: none;
    }

</style>
<div class="container-fluid">

    <div class="contentt">
        <p>@Localizer["Direct_cash_flow"].Value</p>

    </div>


    <div class="form_content">
        <div id="taichinhform">

                    <div class="form-groups row">
                        <div class="col-md-1" >
                            <label>@Localizer["REPORTING_PERIOD"].Value</label>
                        </div>

                        <div class="col-md-1" >
                            <select class="form-item" id="Period" name="platform">

                                <option class="Y" value="12Y" selected>@Localizer["WHOLEYEAR"]</option>
                                <option class="Q" value="3">@Localizer["QUARTER1"]</option>
                                <option class="Q" value="6">@Localizer["QUARTER2"]</option>
                                <option class="Y" value="6Y">@Localizer["6MONTHS"] </option>
                                <option class="Q" value="9">@Localizer["QUARTER3"]</option>
                                <option class="Q" value="12">@Localizer["QUARTER4"]</option>

                            </select>

                        </div>

                        <div class="col-md-1">
                            <select class="form-item"  id="Year">
                            </select>
                        </div>

                        <div class="col-md-1">
                            <label >@Localizer["NUM_OF_PERIOD"].Value</label>
                        </div>
                        <div class="col-md-1">

                            <select class="form-item" id="NumOfPeriod">
                                <option value="5" selected>5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                                <option value="8">8</option>
                                <option value="9">9</option>
                                <option value="10">10</option>
                            </select>
                        </div>
                        <div class="col-md-1">
                            <label >@Localizer["UNIT"].Value</label>
                        </div>
                        <div class="col-md-1" >
                            <select class="form-item" id="Unit">
                                <option value="b">@Localizer["BILLION"]</option>
                                <option value="m">@Localizer["MILLION"]</option>
                                <option value="t">@Localizer["THOUSANDS"]</option>
                                <option value="d" selected>@Localizer["DONG"]</option>
                            </select>
                        </div>
                        <div class="col-md-2" id="new_year">

                            <select class="form-item" id="DataType">
                                <option value="1" selected>@Localizer["CALENDER_YEAR"]</option>
                                <option value="2">@Localizer["FINANCIAL_YEAR"]</option>

                            </select>
                        </div>
                        <div class="col-md-3 btn-view">
                            <button class="btn btn-success" type="submit" id="btnxem">
                                @Localizer["View"].Value
                            </button>
                      
                            <button class="btn btn-success btnSearchHSTC" type="button" id="btnExport" >
                                @Localizer["Export"].Value
                            </button>

                        </div>
                    </div>

        </div>
    </div>

    <!-- Page Heading -->
    <!-- Content Row -->
    <!-- Content Row -->
    <!-- Content Row -->


    <!--Table tai chinh-->
    <div class="table-content" style="width:100%;">
        <div class="wmd-view-topscroll">
            <div class="scroll-div1">
            </div>
        </div>
        <div class="wmd-view">
            <div class="scroll-div2">
                <table id="table_taichinh" class="itemler" cellspacing="0" cellpadding="0" border="0"
                       >
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!--End Table tai chinh-->
</div>
<div id="loading"></div>
<script>
    // hide all children
    function hideChildrenDCF(arCode) {
        const table = document.getElementById('table_taichinh');
        const tdList = table.getElementsByClassName(arCode);

        const idList = Array.from(tdList).map(td => td.id);

        let flag = false;

        idList.map((item) => {
            const td = document.getElementById(item);
            if (td.classList.contains('hide')) {
                flag = true;
                td.classList.remove('hide');
            }
        })

        if (flag) {
            recurse(idList, true);
        } else {
            recurse(idList, false);
        }
    }

    // recurse to find all children
    function recurse(idList, toggleTag) {
        if (idList.length == 0) return;
        const table = document.getElementById('table_taichinh');
        idList.filter((id) => {
            const td = document.getElementById(id);
            if (toggleTag) {
                td.parentElement.classList.remove('hide');
                td.classList.remove('hide');
            } else {
                td.parentElement.classList.add('hide');
                td.classList.add('hide');
            }
            const tdList = table.getElementsByClassName(id);
            const idListTemp = Array.from(tdList).map(td => td.id);
            recurse(idListTemp);
        })
    }

    // get all id via class of parent
    function getAllId(parentId) {
        const table = document.getElementById('table_taichinh');
        const tdList = table.getElementsByClassName(parentId);
        const idList = Array.from(tdList).map(td => td.id);
        return idList;
    }

    // find all parent of id
    function findLastChild(flatDataDCF) {
        const table = document.getElementById('table_taichinh');
        const tdList = table.getElementsByClassName('hide');
        const idList = flatDataDCF.map((item) => {
            return item.arCode;
        })
        return idList;
    }

    // remove all class hide
    function removeIconChild(idList) {
        idList.map((item) => {
            const cl = document.getElementsByClassName(item);
            if (cl.length == 0) {
                const td = document.getElementById(item);
                // remove tag i in td
                td.innerHTML = td.innerHTML.replace('<i class="fas fa-caret-down"></i>', '');
            }
        })
    }

    // set up two scroll bars on content
    $(function () {
        $(".wmd-view-topscroll").scroll(function () {
            $(".wmd-view")
                .scrollLeft($(".wmd-view-topscroll").scrollLeft());
        });
        $(".wmd-view").scroll(function () {
            $(".wmd-view-topscroll")
                .scrollLeft($(".wmd-view").scrollLeft());
        });
    });
    $(document).ready(function () {
        var DCF = function () {
            this.init = function () {
                loadYear();
                var width = screen.width;
                if (width <= 567) {
                    $('#Unit').val('m');
                };
                loadDataDCF($('#Year').val(), 12, $('#Period').val(), 'Y');
                registerEventsDCF();
            }
            // Mã CK của cty hiện tại
            var stock_code = window.location.href.split('?')[0].split('/')[4];
            var stockcode = stock_code.toUpperCase().replace('?', '');

            // Lấy ngôn ngữ trên site
            var Language = "VN";
            var lang = ReturnLanguage().split("-")[1];
            if (lang == "US") {
                Language = "EN";
            }
            else {
                Language;
            }
            var langLink = ReturnLinkLanguage();
        @*console.log(Language);*@
            var loadDataDCF = function (year, dataType, period, DateType) {
                $('#loading').addClass('loading')
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetLuuChuyenTienTeDCF", "ThongTinDoanhNghiep")',
                    data: {
                        stock_code: stockcode,
                        language: Language,
                        year: year,
                        datatype: dataType,
                        period: period,
                        dateType: DateType
                    },
                    success: function (data) {
                        // console.log(data);
                        $('#loading').removeClass('loading');
                        if (data != null) {
                            // Số kì => số lượng cột hiển trị trong bảng
                            var numOfPeriods = $('#NumOfPeriod').val();

                            // Đơn vị (Tỷ đồng, Triệu đồng ....)
                            var unit = $('#Unit').val();

                            // Khai báo hàm dùng lại
                            function metricLoop() {
                                var k = 0;
                                var obj = data[0].table1[i]
                                for (var key in obj) {
                                    // Kiểm tra khác null và xác định giá trị col trong bảng
                                    if (key.includes('col') && obj[key] != null) {
                                        switch (unit) {
                                            // Tỷ đồng
                                            case 'b':
                                                obj[key] = parseInt(obj[key] / 1e9);
                                                break;
                                            // Triệu đồng
                                            case 'm':
                                                obj[key] = parseInt(obj[key] / 1e6);
                                                break;
                                            // Ngàn đồng
                                            case 't':
                                                obj[key] = parseInt(obj[key] / 1e3);
                                                break;
                                        }
                                    }
                                    // Chèn dấu phẩy vào sau 3 chữ số trong chuỗi
                                    if (obj[key] != null) {
                                        obj[key] = obj[key].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    }
                                    // Kiểm tra nếu số liệu bằng null thì hiển thị "-"
                                    if (obj[key] == null) {
                                        obj[key] = "-";
                                    }

                                    // Kiểm tra nếu số liệu bằng null thì hiển thị "-"
                                    if (obj[key] == "0") {
                                        obj[key] = "-";
                                    }
                                    // Kiểm tra nếu số liệu - thì hiển ()
                                    if (obj[key].includes('-') && obj[key] != '-') {
                                        obj[key] = '(' + obj[key].replace('-', '') + ')';
                                    }
                                    // add số liệu sau khi xử lý vào td
                                    html += `<td class="reportTitle heightauto" width="100px">${obj[key]}</td>`
                                    k++;
                                    // kiểm tra nếu k số cột bằng numOfPeriods thì dừng
                                    if (k == numOfPeriods) {
                                        break;
                                    }
                                }
                            }

                            var html = `<tr class="chitieu" ><th class="ReportTitleLeft TitleLeft headcol headcol-long"><div class="text-title text-long">@Localizer["Items"].Value</div></th>`
                            // Duyệt bảng 1
                            for (var i = 0; i < data[0].table.length; i++) {

                                // k số lượng cột
                                var k = 0;
                                var obj = data[0].table[i]

                                // Duyêt từng phần tử trong bảng 1 add vào từng cột <th>
                                for (var key in obj) {
                                    html += `<th class="reportTitle" style=" font-weight: bold" width="100px">${obj[key]}</th>`
                                    k++;
                                    // Nếu giá trị k = numOfPeriods thì dừng duyệt
                                    if (k == numOfPeriods) {
                                        break;
                                    }
                                }
                            };
                            html += `</tr>`
                            // Duyệt bảng 2
                            for (var i = 0; i < data[0].table1.length; i++) {
                                if (data[0].table1[i].alev == '1') {
                                    html += `<tr class="data_chitieu">
                                        <td id="${data[0].table1[i].arCode}" class="${data[0].table1[i].aparentCode} TitleLeft ReportTitleLeft heightauto text-level1 headcol headcol-long"  onclick="hideChildrenDCF('${data[0].table1[i].arCode}')"><div class="text-title text-long"><i class="fas fa-caret-down"></i>${data[0].table1[i].adescription}</div></td>`
                                    metricLoop();
                                    html += `</tr>`
                                }
                                else if (data[0].table1[i].alev == '2') {
                                    html += `<tr class="data_chitieu">
                                        <td id="${data[0].table1[i].arCode}" class="${data[0].table1[i].aparentCode} TitleLeft ReportTitleLeft heightauto text-level2 headcol headcol-long"  onclick="hideChildrenDCF('${data[0].table1[i].arCode}')"><div class="text-title1 text-long"><i class="fas fa-caret-down"></i>${data[0].table1[i].adescription}</div></td>`
                                    metricLoop();
                                    html += `</tr>`
                                }
                                else {
                                    html += `<tr class="data_chitieu">
                                        <td id="${data[0].table1[i].arCode}" class="${data[0].table1[i].aparentCode} TitleLeft ReportTitleLeft heightauto headcol headcol-long"  onclick="hideChildrenDCF('${data[0].table1[i].arCode}')"><div class="text-title2 text-long"><i class="fas fa-caret-down"></i>${data[0].table1[i].adescription}</div></td>`
                                    metricLoop();
                                    html += `</tr>`
                                }
                            }
                            // Mỗi lần search dữ liệu thay đổi thì xóa dữ liệu hiển thị trước đi
                            $('#table_taichinh tbody').empty();
                            $('#table_taichinh tbody').append(html);
                            // css icon table_taichinh
                            let flatDataDCF = data[0].table1;
                            const idList = findLastChild(flatDataDCF);
                            removeIconChild(idList);
                            isScroll();
                        }
                        // Không có dữ liệu thì thực thi
                        else {
                            $('#loading').removeClass('loading');
                            $('#table_taichinh tbody').empty();
                            $('#table_taichinh tbody').hide();
                            isScroll();
                        }
                    }
                });
            }

            //Load dữ liệu tìm kiếm theo năm (năm hiện tại + thêm 1 năm và tìm kiếm trong khoảng 10 năm)
            var loadYear = function () {
                var htmlYear = ``
                for (var i = new Date().getFullYear() + 1; i >= new Date().getFullYear() - 9; i--) {
                    if (i == new Date().getFullYear() - 2) {
                        htmlYear += `<option value="${i}" selected>${i}</option>`
                    } else {
                        htmlYear += `<option value="${i}">${i}</option>`
                    }

                    $('#Year').empty();
                    $('#Year').append(htmlYear);
                } $('#Year').val(new Date().getFullYear());
            }

            var registerEventsDCF = function () {

                // Tìm kiếm theo các điều kiện
                $('body').on('click', '#btnxem', function (e) {
                    // Lấy DateType (Y là cả năm/nửa năm, Q là quý)
                    var DateType = $('select[name="platform"] :selected').attr('class');
                    loadDataDCF($('#Year').val(), $('#DataType').val(), $('#Period').val(), DateType);
                });

                $('#btnExport').click(function () {
                    let period = 12;
                    let dateType = "Q";
                    if ($('#Period').val().includes('Y')) {
                        period = $('#Period').val().substring(0, $('#Period').val().length - 1);
                        dateType = "Y"
                    } else {
                        period = $('#Period').val();
                        dateType = "Q"
                    }
                    langLink = langLink.replace('?', '&');
                    var a = document.createElement("a");
                    var urlDownload = '@Url.Action("ExcelLuuChuyenTienTeDCF", "ThongTinDoanhNghiep")' + "?stock_code=" + stockcode + "&year=" + $('#Year').val() + "&datatype=" + $('#DataType').val() + "&period=" + period + "&unit=" + $('#Unit').val() + "&dateType=" + dateType + "&numofPeriod=" + $('#NumOfPeriod').val() + langLink;
                    a.href = urlDownload;
                    document.body.appendChild(a);
                    a.click();
                    a.remove();

                });
               

            }
            var isScroll = function () {
                // Get on screen image
                var tableWidth = $("#table_taichinh").width() + 2;
                var screenWidth1 = screen.width;
                var widthpx = tableWidth + "px"
                console.log(tableWidth);
                $(".scroll-div1").css("width", widthpx);
                if (screenWidth1 > 1024) {
                    $(".wmd-view-topscroll").css("height", "5px");
                } else {
                    $(".wmd-view-topscroll").css("height", "0px");
                }
            }
        }
        var dcf = new DCF();
        dcf.init();
    })
</script>
